#!/usr/bin/env php
<?php

require __DIR__ . "/../vendor/autoload.php";

use Flagship\Enum\FlagshipConstant;
use Flagship\Utils\HttpClient;

$fileConfig = null;

// argument --file=flagship.json
if (isset($argv[1])) {
   $fileConfig = getopt(null, ["file:"]);
}

if (!$fileConfig){
    $fileConfig = 'flagship.json';
}

if (!file_exists($fileConfig)){
    fwrite(
        STDERR,
        "flagship config file not found" . PHP_EOL
    );
    die(1);
}

$fileContent = file_get_contents($fileConfig);

$configArray = json_decode($fileContent, true);

if (!$configArray){
    fwrite(
        STDERR,
        "flagship config malformed" . PHP_EOL
    );
    die(1);
}

if (!isset($configArray['envId'])){
    fwrite(
        STDERR,
        "envId field is missing" . PHP_EOL
    );
    die(1);
}

if (!isset($configArray['apiKey'])){
    fwrite(
        STDERR,
        "apiKey field is missing" . PHP_EOL
    );
    die(1);
}

$envId = $argv[1];
$pollingInterval = FlagshipConstant::REQUEST_TIME_OUT;
// argument pollingInterval
if (isset($argv[2])) {
    $pollingInterval = $argv[2];
}

while (true) {
    try {
        echo 'start';
        $httpClient = new HttpClient();
        $url = "https://cdn.flagship.io/$envId/bucketing.json";
        $response = $httpClient->get($url);
        $bucketingFile = __DIR__ . "/../bucketing.json";
        file_put_contents($bucketingFile, json_encode($response->getBody()));

        echo 'sleep';
        sleep($pollingInterval);
        echo 'end sleep';
    } catch (Exception $exception) {
        var_dump($exception);
    }
}
