#!/usr/bin/env php
<?php

require __DIR__ . "/../vendor/autoload.php";

use Flagship\Decision\BucketingPolling;
use Flagship\Enum\FlagshipConstant;
use Flagship\Utils\HttpClient;

$fileConfig = null;



// argument --file=flagship.json
if (isset($argv[1])) {
   $fileArgument = getopt(null, ["file:"]);

   if (isset($fileArgument['file'])){
       $fileConfig = __DIR__ . '/../'. $fileArgument['file'];
   }

}

if (!$fileConfig){
    $fileConfig = 'flagship.json';
}
var_dump($fileConfig);
if (!file_exists($fileConfig)){
    fwrite(
        STDERR,
        "flagship config file not found" . PHP_EOL
    );
    die(1);
}

$fileContent = file_get_contents($fileConfig);

$configArray = json_decode($fileContent, true);

if (!$configArray){
    fwrite(
        STDERR,
        "flagship config malformed" . PHP_EOL
    );
    die(1);
}

if (!isset($configArray['envId'])){
    fwrite(
        STDERR,
        "envId field is missing" . PHP_EOL
    );
    die(1);
}

$pollingInterval = null;

if (!isset($configArray['pollingInterval'])){

    $pollingInterval = FlagshipConstant::REQUEST_TIME_OUT * 1000;

    fwrite(
        STDERR,
        "pollingInterval field is missing default value will be used 2000ms" . PHP_EOL
    );
}

$envId = $configArray['envId'];

if (!$pollingInterval){
    $pollingInterval = $configArray['pollingInterval'];
}

$bucketingPolling = new BucketingPolling($envId, $pollingInterval, new HttpClient());

$bucketingPolling->startPolling();